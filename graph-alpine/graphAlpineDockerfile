#docker build -t graph-alpine -f graphAlpineDockerfile .
#docker run -it graph-alpine
#docker ps
#docker exec -it <container-id-or-name> /bin/sh
#docker run --privileged -v /dev/fb0:/dev/fb0 graph-alpine

FROM alpine:latest

RUN apk update && \
	apk add --no-cache util-linux &&\
    apk add --no-cache make mc curl nano wget git  binutils && \
	apk add ncurses-dev
	
RUN addgroup -g 10000 team1 && \
    adduser -u 10000 -G team1 -s /bin/sh -D user1 && \
	echo 'root:pass' | chpasswd && \
	echo 'user1:pass' | chpasswd && \
	chmod u+s /bin/su
	
RUN mkdir /usr/art
COPY art /usr/art

RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories
RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories

RUN apk update && \
	apk add --no-cache ca-certificates && \
	update-ca-certificates
	
#RUN apk update && \
#    apk add --no-cache fbset fbterm

RUN chmod -Rf 777 /usr/art && \
	chown -R user1:team1 /usr/art
	
WORKDIR /usr/

user user1

CMD ["mc"]
#docker run --privileged -v /dev/fb0:/dev/fb0 -it graph-alpine