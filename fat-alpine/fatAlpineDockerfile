#docker build -t fat-alpine -f fatAlpineDockerfile .
#docker run -it fat-alpine
#docker ps
#docker exec -it <container-id-or-name> /bin/sh

FROM alpine:latest

RUN apk update && \
    apk add --no-cache make mc curl nano wget git maven binutils && \
	apk add --no-cache gcc python3 py3-pip openjdk11 openjdk17 nasm go npm && \
	apk add ghc cabal gcc-gnat dmd dub gfortran libgfortran clisp ncurses-dev
	

RUN apk add nethack && \
    apk add figlet cmatrix lynx mutt sl cmus newsboat ranger alpine dialog elinks fortune && \
    apk add gnuplot inxi ncdu nyancat sc screen tree units w3m zsh tty-solitaire 

RUN ln -s -f /usr/bin/python3 /usr/bin/python && \
    ln -s -f /usr/bin/pip3 /usr/bin/pip
    
RUN pip install colorama art pipenv	
	
RUN addgroup -g 10000 teamX && \
    adduser -u 10000 -G teamX -s /bin/sh -D userX && \
	echo 'root:pass' | chpasswd && \
	echo 'userX:pass' | chpasswd && \
	chmod u+s /bin/su

RUN mkdir python-stuff && \
	chmod 777 python-stuff
	
RUN mkdir /usr/java-stuff && \
	mkdir /usr/java-stuff/11 && \
	mkdir /usr/java-stuff/17 && \
	mkdir /usr/assembler-stuff && \
	mkdir /usr/go-stuff && \
	mkdir /usr/haskell-stuff && \
	mkdir /usr/d-stuff && \
	mkdir /usr/perl-stuff && \
	mkdir /usr/lisp-stuff && \
	mkdir /usr/nodejs-stuff && \
	mkdir /usr/ada-stuff
	
COPY info.py /usr/
COPY python/* /usr/python-stuff/
COPY java/* /usr/java-stuff/11/
COPY asm/* /usr/assembler-stuff/
COPY go/* /usr/go-stuff/
COPY haskell/* /usr/haskell-stuff/
COPY D/* /usr/d-stuff/
COPY perl/* /usr/perl-stuff/
COPY lisp/* /usr/lisp-stuff/
COPY nodejs/* /usr/nodejs-stuff/
COPY ada/* /usr/ada-stuff/

RUN chmod -Rf 777 /usr/java-stuff && \
	chmod -Rf 777 /usr/assembler-stuff && \
	chmod -Rf 777 /usr/go-stuff && \
	chmod -Rf 777 /usr/haskell-stuff && \
	chmod -Rf 777 /usr/ada-stuff && \
	chmod -Rf 777 /usr/d-stuff && \
	chmod -Rf 777 /usr/lisp-stuff && \
	chmod -Rf 777 /usr/nodejs-stuff && \
	chmod -Rf 777 /usr/perl-stuff

WORKDIR /usr/assembler-stuff
RUN nasm -f elf64 HelloAsm.asm -o hello.o
RUN ld hello.o  -o hello

WORKDIR /usr/d-stuff/trigonometry
#RUN dub update && \
#RUN	dub build

WORKDIR /usr/python-stuff
RUN git clone https://github.com/aelmosalamy/ascii-combat.git
RUN git clone https://github.com/AdiChops/Ironfortune.git
RUN git clone https://github.com/kdrzazga/microservices.git

WORKDIR /usr/java-stuff/11
RUN wget -O buggyservice.jar https://github.com/kdrzazga/buggy-webservice/releases/download/v.0.4.5/buggywebservice-0.4.5-RELEASE.jar
RUN git clone https://github.com/winterbe/java8-tutorial.git

WORKDIR /usr/java-stuff/17
RUN git clone https://github.com/kdrzazga/webautomation-tutorial2.git
WORKDIR /usr/java-stuff/17/webautomation-tutorial2
RUN mvn clean package -DskipTests
WORKDIR /usr/java-stuff/17
# COPY /usr/java-stuff/17/*-jar-with-dependencies.jar /usr/java-stuff/17/webaut.jar

RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories
RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories

RUN apk update && \
	apk add --no-cache swi-prolog ca-certificates && \
	update-ca-certificates

WORKDIR /usr/

EXPOSE 8080 8081 8082 8083
USER userX

CMD ["python", "info.py", "up"]
